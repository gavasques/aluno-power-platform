// Test Evolution API Configuration
const { whatsappService } = require('./server/services/whatsappService.ts');

async function testEvolutionAPI() {
  console.log('üîç Testando configura√ß√£o da Evolution API...');
  
  // Check environment variables
  console.log('üìã Verificando vari√°veis de ambiente:');
  console.log('   EVOLUTION_API_URL:', process.env.EVOLUTION_API_URL ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
  console.log('   EVOLUTION_API_KEY:', process.env.EVOLUTION_API_KEY ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
  console.log('   EVOLUTION_INSTANCE_NAME:', process.env.EVOLUTION_INSTANCE_NAME ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
  
  if (!process.env.EVOLUTION_API_URL || !process.env.EVOLUTION_API_KEY || !process.env.EVOLUTION_INSTANCE_NAME) {
    console.log('‚ùå Configura√ß√£o incompleta - todas as vari√°veis s√£o necess√°rias');
    return;
  }
  
  // Test connection
  console.log('\nüì° Testando conex√£o com Evolution API...');
  try {
    const isConnected = await whatsappService.checkConnection();
    if (isConnected) {
      console.log('‚úÖ Conex√£o estabelecida com sucesso!');
      console.log('üì± Inst√¢ncia WhatsApp est√° ativa e pronta para envio');
    } else {
      console.log('‚ùå Falha na conex√£o ou inst√¢ncia inativa');
      console.log('üí° Verifique se:');
      console.log('   - A URL da API est√° correta');
      console.log('   - A chave da API √© v√°lida');
      console.log('   - A inst√¢ncia WhatsApp est√° conectada e ativa');
    }
  } catch (error) {
    console.log('‚ùå Erro ao testar conex√£o:', error.message);
  }
  
  // Test verification code generation
  console.log('\nüî¢ Testando gera√ß√£o de c√≥digo de verifica√ß√£o...');
  const testCode = whatsappService.generateVerificationCode();
  console.log('üìã C√≥digo gerado:', testCode);
  console.log('‚úÖ Gera√ß√£o de c√≥digos funcionando corretamente');
}

testEvolutionAPI().catch(console.error);